#!/bin/bash

# Define colors (totally unnecessary but it looks nice)
LIGHTRED="\033[1;31m"
YELLOW="\033[1;33m"
LIGHTGREEN="\033[1;32m"
CYAN="\033[0;36m"
RESET="\u001b[0m"

API_ROOT="https://papermc.io/api/v2/projects/paper/versions"

# Define functions
get_metadata () {
    # why did they remove this
    [ "$PAPER_BUILD" = "latest" ] && PAPER_BUILD=$(curl -s $API_ROOT/$MC_RELEASE | jq -r ".builds | last")
    NEW_JAR_INFO=$(curl -s $API_ROOT/$MC_RELEASE/builds/$PAPER_BUILD)
    NEW_JAR_NAME=$(echo $NEW_JAR_INFO | jq -r ".downloads.application.name")
    NEW_JAR_HASH=$(echo $NEW_JAR_INFO | jq -r ".downloads.application.sha256")
    NEW_JAR_DL="$API_ROOT/$MC_RELEASE/builds/$PAPER_BUILD/downloads/$NEW_JAR_NAME"
}

get_jar () {
    echo -e "${CYAN}Fetching $NEW_JAR_NAME...${RESET}"
    wget -q $NEW_JAR_DL -O /data/paper.jar
    echo -e "${CYAN}Writing hash to file...${RESET}"
    printf "$NEW_JAR_HASH" > /data/hash
    echo -e "${LIGHTGREEN}Done!${RESET}"
}

is_updated () {
    if [ ! -f "/data/hash" ]; then
        echo -e "${CYAN}Generating hash & writing to file...${RESET}"
        openssl dgst -sha256 /data/paper.jar | awk '{printf $2}' > /data/hash
    fi

    CURRENT_JAR_HASH=$(cat /data/hash)
    [ "$CURRENT_JAR_HASH" = "$NEW_JAR_HASH" ] && return
    # This will only be reached if the above condition is false
    false
}

echo "========== UPDATER =========="
get_metadata
# Validate that the selected Paper version exists on the server
if [[ $(echo "$NEW_JAR_INFO" | jq -r ".error") != "null" ]]; then
    echo -e "${LIGHTRED}====================ERROR=======================${RESET}"
    echo -e "${LIGHTRED}The Paper version you have selected is invalid!${RESET}"
    echo -e "${LIGHTRED}Aborting...${RESET}"
    echo -e "${LIGHTRED}====================ERROR=======================${RESET}"    
    exit 1;
fi

# Download Paper if it is not installed
if [ ! -f "/data/paper.jar" ]; then
    echo -e "${YELLOW}It appears that Paper has not been downloaded yet.${RESET}"
    get_jar
    # This will only generate the initial server setup files if the EULA has not been accepted
    exec /start
fi

# Check if Paper is updated/switch build
echo -e "${CYAN}Checking Paper version...${RESET}"
if is_updated; then
    echo -e "${YELLOW}Your Paper version up to date.${RESET}"
else
    echo -e "${YELLOW}Your Paper version is out of date!${RESET}"
    get_jar
fi

# Finally, start the server
exec /start